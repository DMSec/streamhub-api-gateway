spring:
  application:
    name: streamhub-api-gateway
  security:
    oauth2:
      client:
        provider:
            streamhub-keycloak-provider:
                issuer-uri: http://localhost:8080/realms/My-Realm
        registration:
          streamhub-api-gateway-client:
            provider: streamhub-keycloak-provider
            scope: openid
            client-id: streamhub-api-gateway-client
            client-secret: Hp4iSIT7dk49nztaTUfhFI28uGUtiaIN
            authorization-grant-type: authorization_code
            redirect-uri: '{baseUrl}/login/oauth2/code/keycloak'
  cloud:
    gateway:
      default-filters:
        - TokenRelay
      discovery:
        locator:
          enabled: true

      httpclient:
        ssl:
          useInsecureTrustManager: true
      routes:
        - id: tvshow-resource-server
          uri: http://localhost:9191
          predicates:
            - Path=/tvshows/ping
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 10
                redis-rate-limiter.requestedTokens: 1
        - id: tvshow-resource-server-fallback
          uri: http://localhost:9191
          predicates:
              - Path=/tvshows/{segment}
          filters:
            - name: CircuitBreaker
              args:
                name: myCircuitBreaker
                fallbackUri: forward:/fallback


        - id: products
          uri: https://localhost:9092
          predicates:
            - Path=/api/v1/products
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 10
                redis-rate-limiter.requestedTokens: 1
        - id: customers
          uri: http://localhost:9091
          predicates:
            - Path=/api/v1/{segment},/api/v2/{segment}
          filters:
            - name: CircuitBreaker
              args:
                name: myCircuitBreaker
                fallbackUri: forward:/fallback
        - id: customers-hidden
          uri: http://localhost:9091
          predicates:
            - Path=/api/v1/customers/hidden
            - Cookie=hidden-api,true
        - id: customers-v1
          uri: http://localhost:9091
          predicates:
            - Weight=customers, 8
            - Path=/customers
          filters:
            - RewritePath=/customers, /api/v1/customers
        - id: customers-v2
          uri: http://localhost:9091
          predicates:
            - Weight=customers, 2
            - Path=/customers
          filters:
            - RewritePath=/customers, /api/v2/customers
        - id: retry
          uri: http://localhost:9091
          predicates:
            - Path=/api/v1/customers/retry
          filters:
            - name: Retry
              args:
                retries: 5
                statuses: BAD_REQUEST, INTERNAL_SERVER_ERROR
                methods: GET
                backoff:
                  firstBackoff: 10ms
                  maxBackoff: 50ms
                  factor: 3
                  basedOnPreviousValue: false

server:
  port: 8443
  error:
    include-stacktrace: never
  ssl:
    enabled: false
    key-alias: 1
    key-store-password: changeit
    key-store: classpath:server-keystore.p12
    key-store-type: PKCS12


management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    gateway:
      enabled: true
    health:
      show-details: always

logging:
  level:
    root: INFO
    br.com.dmsec.streamhub.gateway: DEBUG
    org.springframework.cloud.gateway: DEBUG
    org.springframework.security: TRACE